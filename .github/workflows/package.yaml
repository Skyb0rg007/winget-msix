on:
  workflow_dispatch:
    inputs: {}

# permissions:
#   id-token: write
#   attestations: write

jobs:
  build-anki:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSIX Packaging Tool
        run: |
          New-Item -Type Directory -Name _build

          $Version = "v0.1.2"
          $Uri = "https://github.com/microsoft/win32-app-isolation/releases/download/$Version/ACP-MPT-$Version.zip"
          Invoke-WebRequest -Uri $Uri -OutFile .\_build\ACP-MPT-$Version.zip
          Expand-Archive -Path .\_build\ACP-MPT-$Version.zip -DestinationPath .\_build

          Import-Module -UseWindowsPowerShell Appx
          Add-AppxPackage -Path .\_build\MsixPackagingTool.msixbundle

      - name: Download the Anki installer
        run: |
          $Uri = "https://github.com/ankitects/anki/releases/download/25.02/anki-25.02-windows-qt6.exe"
          $ExeFile = "anki.exe"
          Invoke-WebRequest -Uri $Uri -OutFile .\_build\$ExeFile
          if (Test-Path .\_build\$ExeFile) {
            Write-Output "Downloaded exe to .\_build\$ExeFile"
          } else {
            Write-Error ".\_build\$ExeFile did not properly download"
          }

      - name: Package the MSIX
        run: |
          New-Item -Type Directory -Name _build\msix-output
          $File = "templates\a\Anki\Anki\25.02\Anki.Anki_template.xml"
          .\scripts\Build-Msix.ps1 -TemplatePath $File -InstallerPath .\_build\anki.exe -OutputPath .\_build\msix-output

      # - name: Attest to the artifact
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-path: 'C:/Users/runneradmin/Desktop/?.msix'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msix
          path: |
            _build/msix-output

